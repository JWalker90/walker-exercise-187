/* AUTHOR: Jonathan Walker
 * COURSE: CPT187
 * PURPOSE: This preserves information pertaining to store transactions by writing a new record in the master file for the given transaction.
 * STARTDATE: 02/16/21
 */

package edu.cpt187.walker.exercise6;

import java.io.PrintWriter;
import java.io.FileWriter;
import java.io.IOException;

public class WriteOrder
{
	// attributes
	private boolean fileFoundFlag = false;
	private String masterFileName = "";
	private int recordCount = 0;

	// constructor
	public WriteOrder(String borrowedFileName)
	{
		masterFileName = borrowedFileName;
	}// END constructor

	// behaviors
	public void setWriteOrder(int borrowedItemID, String borrowedItemName, double borrowedItemPrice, int borrowedQuantity, double borrowedOrderCost)
	{
		try
		{
			PrintWriter filePW = new PrintWriter(new FileWriter(masterFileName, true));
			filePW.printf("%n%d\t%s\t%.2f\t%d\t%.2f", borrowedItemID, borrowedItemName, borrowedItemPrice, borrowedQuantity, borrowedOrderCost);
			fileFoundFlag = true;
			filePW.close();
			recordCount++;
		}// END try
		catch (IOException ex)
		{
			fileFoundFlag = false;
		}// END catch
	}// END setWriteOrder

	public boolean getFileFoundFlag()
	{
		return fileFoundFlag;
	}// END getFileFoundFlag

	public String getFileName()
	{
		return masterFileName;
	}// END getFileName

	public int getRecordCount()
	{
		return recordCount;
	}// END getRecordCount

}// END WriteOrder class
